# Install and load the required library
# install.packages("plotly")
library(plotly)
# Définir le nombre total de vignettes dans la collection
N <- 500
# Fonction pour simuler une semaine d'achat de paquets de céréales
achat_semaine <- function(N) {
# Initialiser un vecteur pour suivre les vignettes collectées
collection <- rep(0, N)
# Compteur de semaines
semaines <- 0
semaines_vs_vignettes <- numeric(N)
# Tant qu'il reste des vignettes à collecter
while (sum(collection) < N) {
# Acheter un paquet de céréales
paquet <- sample(1:N, 1)
# Mettre à jour la collection
collection[paquet] <- 1
# Augmenter le compteur de semaines
semaines <- semaines + 1
# Enregistrer le nombre de semaines pour le nombre de vignettes collectées
semaines_vs_vignettes[sum(collection)] <- semaines
}
return(semaines_vs_vignettes)
}
# Répéter la simulation un grand nombre de fois pour obtenir une estimation
# du nombre moyen de semaines nécessaires pour compléter la collection
nombre_simulations <- 1000
resultats <- replicate(nombre_simulations, achat_semaine(N))
# Calculer la moyenne des résultats
moyenne <- apply(resultats, 1, mean)
# Afficher le résultat
cat("Nombre moyen de semaines pour compléter la collection :", moyenne[N], "\n")
# Tracer la courbe avec plotly
plot_data <- data.frame(Weeks = moyenne, Vignettes = 1:N)
p <- plot_ly(data = plot_data, x = ~Weeks, y = ~Vignettes, type = 'scatter', mode = 'lines', line = list(color = 'blue'), name = 'Simulation') %>%
layout(
xaxis = list(title = 'Nombre de semaines'),
yaxis = list(title = 'Nombre de vignettes collectées'),
title = 'Nombre de vignettes collectées en fonction du temps (nombres de semaines)'
)
# Ajouter une annotation pour le nombre moyen de semaines
p <- add_annotations(
p,
x = moyenne[N], y = N,
text = paste("Nombre moyen de semaines : ", round(moyenne[N], 2)),
showarrow = TRUE,
arrowhead = 2,
arrowsize = 1,
arrowwidth = 2,
arrowcolor = "red"
)
# Afficher le graphe
p
# Install and load the required library
# install.packages("plotly")
library(plotly)
# Définir le nombre total de vignettes dans la collection
N <- 500
# Fonction pour simuler une semaine d'achat de paquets de céréales
achat_semaine <- function(N) {
# Initialiser un vecteur pour suivre les vignettes collectées
collection <- rep(0, N)
# Compteur de semaines
semaines <- 0
semaines_vs_vignettes <- numeric(N)
# Tant qu'il reste des vignettes à collecter
while (sum(collection) < N) {
# Acheter un paquet de céréales
paquet <- sample(1:N, 1)
# Mettre à jour la collection
collection[paquet] <- 1
# Augmenter le compteur de semaines
semaines <- semaines + 1
# Enregistrer le nombre de semaines pour le nombre de vignettes collectées
semaines_vs_vignettes[sum(collection)] <- semaines
}
return(semaines_vs_vignettes)
}
# Répéter la simulation un grand nombre de fois pour obtenir une estimation
# du nombre moyen de semaines nécessaires pour compléter la collection
nombre_simulations <- 1000
resultats <- replicate(nombre_simulations, achat_semaine(N))
# Calculer la moyenne des résultats
moyenne <- apply(resultats, 1, mean)
# Afficher le résultat
cat("Nombre moyen de semaines pour compléter la collection :", moyenne[N], "\n")
# Tracer la courbe avec plotly
plot_data <- data.frame(Weeks = moyenne, Vignettes = 1:N)
p <- plot_ly(data = plot_data, x = ~Vignettes, y = ~Weeks, type = 'scatter', mode = 'lines', line = list(color = 'blue'), name = 'Simulation') %>%
layout(
xaxis = list(title = 'Nombre de semaines'),
yaxis = list(title = 'Nombre de vignettes collectées'),
title = 'Nombre de vignettes collectées en fonction du temps (nombres de semaines)'
)
# Ajouter une annotation pour le nombre moyen de semaines
p <- add_annotations(
p,
x = moyenne[N], y = N,
text = paste("Nombre moyen de semaines : ", round(moyenne[N], 2)),
showarrow = TRUE,
arrowhead = 2,
arrowsize = 1,
arrowwidth = 2,
arrowcolor = "red"
)
# Afficher le graphe
p
# Install and load the required library
# install.packages("plotly")
library(plotly)
# Définir le nombre total de vignettes dans la collection
N <- 500
# Fonction pour simuler une semaine d'achat de paquets de céréales
achat_semaine <- function(N) {
# Initialiser un vecteur pour suivre les vignettes collectées
collection <- rep(0, N)
# Compteur de semaines
semaines <- 0
semaines_vs_vignettes <- numeric(N)
# Tant qu'il reste des vignettes à collecter
while (sum(collection) < N) {
# Acheter un paquet de céréales
paquet <- sample(1:N, 1)
# Mettre à jour la collection
collection[paquet] <- 1
# Augmenter le compteur de semaines
semaines <- semaines + 1
# Enregistrer le nombre de semaines pour le nombre de vignettes collectées
semaines_vs_vignettes[sum(collection)] <- semaines
}
return(semaines_vs_vignettes)
}
# Répéter la simulation un grand nombre de fois pour obtenir une estimation
# du nombre moyen de semaines nécessaires pour compléter la collection
nombre_simulations <- 1000
resultats <- replicate(nombre_simulations, achat_semaine(N))
# Calculer la moyenne des résultats
moyenne <- apply(resultats, 1, mean)
# Afficher le résultat
cat("Nombre moyen de semaines pour compléter la collection :", moyenne[N], "\n")
# Tracer la courbe avec plotly
plot_data <- data.frame(Weeks = moyenne, Vignettes = 1:N)
p <- plot_ly(data = plot_data, x = ~Weeks, y = ~Vignettes, type = 'scatter', mode = 'lines', line = list(color = 'blue'), name = 'Simulation') %>%
layout(
xaxis = list(title = 'Nombre de semaines'),
yaxis = list(title = 'Nombre de vignettes collectées'),
title = 'Nombre de vignettes collectées en fonction du temps (nombres de semaines)'
)
# Ajouter une annotation pour le nombre moyen de semaines
p <- add_annotations(
p,
x = moyenne[N], y = N,
text = paste("Nombre moyen de semaines : ", round(moyenne[N], 2)),
showarrow = TRUE,
arrowhead = 2,
arrowsize = 1,
arrowwidth = 2,
arrowcolor = "red"
)
# Afficher le graphe
p
# Install and load the required library
# install.packages("plotly")
library(plotly)
# Définir le nombre total de vignettes dans la collection
N <- 500
# Fonction pour simuler une semaine d'achat de paquets de céréales
achat_semaine <- function(N) {
# Initialiser un vecteur pour suivre les vignettes collectées
collection <- rep(0, N)
# Compteur de semaines
semaines <- 0
semaines_vs_vignettes <- numeric(N)
# Tant qu'il reste des vignettes à collecter
while (sum(collection) < N) {
# Acheter un paquet de céréales
paquet <- sample(1:N, 1)
# Mettre à jour la collection
collection[paquet] <- 1
# Augmenter le compteur de semaines
semaines <- semaines + 1
# Enregistrer le nombre de semaines pour le nombre de vignettes collectées
semaines_vs_vignettes[sum(collection)] <- semaines
}
return(semaines_vs_vignettes)
}
# Répéter la simulation un grand nombre de fois pour obtenir une estimation
# du nombre moyen de semaines nécessaires pour compléter la collection
nombre_simulations <- 1000
resultats <- replicate(nombre_simulations, achat_semaine(N))
# Calculer la moyenne des résultats
moyenne <- apply(resultats, 1, mean)
# Afficher le résultat
cat("Nombre moyen de semaines pour compléter la collection :", moyenne[N], "\n")
# Tracer la courbe avec plotly
plot_data <- data.frame(Weeks = moyenne, Vignettes = 1:N)
p <- plot_ly(data = plot_data, x = ~Vignettes, y = ~Weeks, type = 'scatter', mode = 'lines', line = list(color = 'blue'), name = 'Simulation') %>%
layout(
xaxis = list(title = 'Nombre de semaines'),
yaxis = list(title = 'Nombre de vignettes collectées'),
title = 'Nombre de vignettes collectées en fonction du temps (nombres de semaines)'
)
# Ajouter une annotation pour le nombre moyen de semaines
p <- add_annotations(
p,
x = moyenne[N], y = N,
text = paste("Nombre moyen de semaines : ", round(moyenne[N], 2)),
showarrow = TRUE,
arrowhead = 2,
arrowsize = 1,
arrowwidth = 2,
arrowcolor = "red"
)
# Afficher le graphe
p
# Install and load the required library
# install.packages("plotly")
library(plotly)
# Définir le nombre total de vignettes dans la collection
N <- 500
# Fonction pour simuler une semaine d'achat de paquets de céréales
achat_semaine <- function(N) {
# Initialiser un vecteur pour suivre les vignettes collectées
collection <- rep(0, N)
# Compteur de semaines
semaines <- 0
semaines_vs_vignettes <- numeric(N)
# Tant qu'il reste des vignettes à collecter
while (sum(collection) < N) {
# Acheter un paquet de céréales
paquet <- sample(1:N, 1)
# Mettre à jour la collection
collection[paquet] <- 1
# Augmenter le compteur de semaines
semaines <- semaines + 1
# Enregistrer le nombre de semaines pour le nombre de vignettes collectées
semaines_vs_vignettes[sum(collection)] <- semaines
}
return(semaines_vs_vignettes)
}
# Répéter la simulation un grand nombre de fois pour obtenir une estimation
# du nombre moyen de semaines nécessaires pour compléter la collection
nombre_simulations <- 1000
resultats <- replicate(nombre_simulations, achat_semaine(N))
# Calculer la moyenne des résultats
moyenne <- apply(resultats, 1, mean)
# Afficher le résultat
cat("Nombre moyen de semaines pour compléter la collection :", moyenne[N], "\n")
# Tracer la courbe avec plotly
plot_data <- data.frame(Vignettes = 1:N, Weeks = moyenne)
p <- plot_ly(data = plot_data, x = ~Vignettes, y = ~Weeks, type = 'scatter', mode = 'lines', line = list(color = 'blue'), name = 'Simulation') %>%
layout(
xaxis = list(title = 'Nombre de vignettes collectées'),
yaxis = list(title = 'Nombre de semaines'),
title = 'Nombre de vignettes collectées en fonction du temps (nombres de semaines)'
)
# Ajouter une annotation pour le nombre moyen de semaines
p <- add_annotations(
p,
x = moyenne[N], y = N,
text = paste("Nombre moyen de semaines : ", round(moyenne[N], 2)),
showarrow = TRUE,
arrowhead = 2,
arrowsize = 1,
arrowwidth = 2,
arrowcolor = "red"
)
# Afficher le graphe
p
# Install and load the required library
# install.packages("plotly")
library(plotly)
# Définir le nombre total de vignettes dans la collection
N <- 500
# Fonction pour simuler une semaine d'achat de paquets de céréales
achat_semaine <- function(N) {
# Initialiser un vecteur pour suivre les vignettes collectées
collection <- rep(0, N)
# Compteur de semaines
semaines <- 0
semaines_vs_vignettes <- numeric(N)
# Tant qu'il reste des vignettes à collecter
while (sum(collection) < N) {
# Acheter un paquet de céréales
paquet <- sample(1:N, 1)
# Mettre à jour la collection
collection[paquet] <- 1
# Augmenter le compteur de semaines
semaines <- semaines + 1
# Enregistrer le nombre de semaines pour le nombre de vignettes collectées
semaines_vs_vignettes[sum(collection)] <- semaines
}
return(semaines_vs_vignettes)
}
# Répéter la simulation un grand nombre de fois pour obtenir une estimation
# du nombre moyen de semaines nécessaires pour compléter la collection
nombre_simulations <- 1000
resultats <- replicate(nombre_simulations, achat_semaine(N))
# Calculer la moyenne des résultats
moyenne <- apply(resultats, 1, mean)
# Afficher le résultat
cat("Nombre moyen de semaines pour compléter la collection :", moyenne[N], "\n")
# Tracer la courbe avec plotly
plot_data <- data.frame(Vignettes = 1:N, Weeks = moyenne)
p <- plot_ly(data = plot_data, x = ~Vignettes, y = ~Weeks, type = 'scatter', mode = 'lines', line = list(color = 'blue'), name = 'Simulation') %>%
layout(
xaxis = list(title = 'Nombre de vignettes collectées'),
yaxis = list(title = 'Nombre de semaines'),
title = 'Nombre de vignettes collectées en fonction du temps (nombres de semaines)'
)
# Ajouter une annotation pour le nombre moyen de semaines
p <- add_annotations(
p,
x = N , y = moyenne[N],
text = paste("Nombre moyen de semaines : ", round(moyenne[N], 2)),
showarrow = TRUE,
arrowhead = 2,
arrowsize = 1,
arrowwidth = 2,
arrowcolor = "red"
)
# Afficher le graphe
p
# Install and load the required library
# install.packages("plotly")
library(plotly)
# Définir le nombre total de vignettes dans la collection
N <- 500
# Fonction pour simuler une semaine d'achat de paquets de céréales
achat_semaine <- function(N) {
# Initialiser un vecteur pour suivre les vignettes collectées
collection <- rep(0, N)
# Compteur de semaines
semaines <- 0
semaines_vs_vignettes <- numeric(N)
# Tant qu'il reste des vignettes à collecter
while (sum(collection) < N) {
# Acheter un paquet de céréales
paquet <- sample(1:N, 1)
# Mettre à jour la collection
collection[paquet] <- 1
# Augmenter le compteur de semaines
semaines <- semaines + 1
# Enregistrer le nombre de semaines pour le nombre de vignettes collectées
semaines_vs_vignettes[sum(collection)] <- semaines
}
return(semaines_vs_vignettes)
}
# Répéter la simulation un grand nombre de fois pour obtenir une estimation
# du nombre moyen de semaines nécessaires pour compléter la collection
nombre_simulations <- 1000
resultats <- replicate(nombre_simulations, achat_semaine(N))
# Calculer la moyenne des résultats
moyenne <- apply(resultats, 1, mean)
# Afficher le résultat
cat("Nombre moyen de semaines pour compléter la collection :", moyenne[N], "\n")
# Tracer la courbe avec plotly
plot_data <- data.frame(Vignettes = 1:N, Weeks = moyenne)
p <- plot_ly(data = plot_data, x = ~Vignettes, y = ~Weeks, type = 'scatter', mode = 'lines', line = list(color = 'blue'), name = 'Simulation') %>%
layout(
xaxis = list(title = 'Nombre de vignettes collectées'),
yaxis = list(title = 'Nombre de semaines'),
title = 'nombre de semaines en fonction du  Nombre de vignettes collectées '
)
# Ajouter une annotation pour le nombre moyen de semaines
p <- add_annotations(
p,
x = N , y = moyenne[N],
text = paste("Nombre moyen de semaines : ", round(moyenne[N], 2)),
showarrow = TRUE,
arrowhead = 2,
arrowsize = 1,
arrowwidth = 2,
arrowcolor = "red"
)
# Afficher le graphe
p
# Install and load the required library
# install.packages("plotly")
library(plotly)
# Définir le nombre total de vignettes dans la collection
N <- 500
# Fonction pour simuler une semaine d'achat de paquets de céréales
achat_semaine <- function(N) {
# Initialiser un vecteur pour suivre les vignettes collectées
collection <- rep(0, N)
# Compteur de semaines
semaines <- 0
semaines_vs_vignettes <- numeric(N)
# Tant qu'il reste des vignettes à collecter
while (sum(collection) < N) {
# Acheter un paquet de céréales
paquet <- sample(1:N, 1)
# Mettre à jour la collection
collection[paquet] <- 1
# Augmenter le compteur de semaines
semaines <- semaines + 1
# Enregistrer le nombre de semaines pour le nombre de vignettes collectées
semaines_vs_vignettes[sum(collection)] <- semaines
}
return(semaines_vs_vignettes)
}
# Répéter la simulation un grand nombre de fois pour obtenir une estimation
# du nombre moyen de semaines nécessaires pour compléter la collection
nombre_simulations <- 1000
resultats <- replicate(nombre_simulations, achat_semaine(N))
# Calculer la moyenne des résultats
moyenne <- apply(resultats, 1, mean)
# Afficher le résultat
cat("Nombre moyen de semaines pour compléter la collection :", moyenne[N], "\n")
# Tracer la courbe avec plotly
plot_data <- data.frame(Vignettes = 1:N, Weeks = moyenne)
p <- plot_ly(data = plot_data, x = ~Vignettes, y = ~Weeks, type = 'scatter', mode = 'lines', line = list(color = 'blue'), name = 'Simulation') %>%
layout(
xaxis = list(title = 'Nombre de vignettes collectées'),
yaxis = list(title = 'Nombre de semaines'),
title = 'nombre de semaines en fonction du  Nombre de vignettes collectées '
)
# Ajouter une annotation pour le nombre moyen de semaines
p <- add_annotations(
p,
x = N , y = moyenne[N],
text = paste("Nombre moyen de semaines : ", round(moyenne[N], 2)),
showarrow = TRUE,
arrowhead = 2,
arrowsize = 1,
arrowwidth = 2,
arrowcolor = "red"
)
# Ajouter une nouvelle série de données pour n * log(n)
plot_data$log_n <- plot_data$Vignettes * log(plot_data$Vignettes)
# Tracer la courbe avec plotly
p <- plot_ly() %>%
add_trace(data = plot_data, x = ~Vignettes, y = ~Weeks, type = 'scatter', mode = 'lines', line = list(color = 'blue'), name = 'Simulation') %>%
add_trace(data = plot_data, x = ~Vignettes, y = ~log_n, type = 'scatter', mode = 'lines', line = list(color = 'red'), name = 'n * log(n)') %>%
layout(
xaxis = list(title = 'Nombre de vignettes collectées'),
yaxis = list(title = 'Nombre de semaines'),
title = 'Nombre de semaines en fonction du Nombre de vignettes collectées'
)
# Afficher le graphe
p
# Install and load the required library
# install.packages("plotly")
library(plotly)
# Définir le nombre total de vignettes dans la collection
N <- 500
# Fonction pour simuler une semaine d'achat de paquets de céréales
achat_semaine <- function(N) {
# Initialiser un vecteur pour suivre les vignettes collectées
collection <- rep(0, N)
# Compteur de semaines
semaines <- 0
semaines_vs_vignettes <- numeric(N)
# Tant qu'il reste des vignettes à collecter
while (sum(collection) < N) {
# Acheter un paquet de céréales
paquet <- sample(1:N, 1)
# Mettre à jour la collection
collection[paquet] <- 1
# Augmenter le compteur de semaines
semaines <- semaines + 1
# Enregistrer le nombre de semaines pour le nombre de vignettes collectées
semaines_vs_vignettes[sum(collection)] <- semaines
}
return(semaines_vs_vignettes)
}
# Répéter la simulation un grand nombre de fois pour obtenir une estimation
# du nombre moyen de semaines nécessaires pour compléter la collection
nombre_simulations <- 1000
resultats <- replicate(nombre_simulations, achat_semaine(N))
# Calculer la moyenne des résultats
moyenne <- apply(resultats, 1, mean)
# Afficher le résultat
cat("Nombre moyen de semaines pour compléter la collection :", moyenne[N], "\n")
# Tracer la courbe avec plotly
plot_data <- data.frame(Vignettes = 1:N, Weeks = moyenne)
p <- plot_ly(data = plot_data, x = ~Vignettes, y = ~Weeks, type = 'scatter', mode = 'lines', line = list(color = 'blue'), name = 'Simulation') %>%
layout(
xaxis = list(title = 'Nombre de vignettes collectées'),
yaxis = list(title = 'Nombre de semaines'),
title = 'nombre de semaines en fonction du  Nombre de vignettes collectées '
)
# Ajouter une nouvelle série de données pour n * log(n)
plot_data$log_n <- plot_data$Vignettes * log(plot_data$Vignettes)
# Tracer la courbe avec plotly
p <- plot_ly() %>%
add_trace(data = plot_data, x = ~Vignettes, y = ~Weeks, type = 'scatter', mode = 'lines', line = list(color = 'blue'), name = 'Simulation') %>%
add_trace(data = plot_data, x = ~Vignettes, y = ~log_n, type = 'scatter', mode = 'lines', line = list(color = 'red'), name = 'n * log(n)') %>%
layout(
xaxis = list(title = 'Nombre de vignettes collectées'),
yaxis = list(title = 'Nombre de semaines'),
title = 'Nombre de semaines en fonction du Nombre de vignettes collectées'
)
# Ajouter une annotation pour le nombre moyen de semaines
p <- add_annotations(
p,
x = N , y = moyenne[N],
text = paste("Nombre moyen de semaines : ", round(moyenne[N], 2)),
showarrow = TRUE,
arrowhead = 2,
arrowsize = 1,
arrowwidth = 2,
arrowcolor = "red"
)
# Afficher le graphe
p
