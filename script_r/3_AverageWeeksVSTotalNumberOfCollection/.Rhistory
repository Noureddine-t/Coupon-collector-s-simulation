plot_ly(x = ~TotalCollectionNumber, y = ~AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines', line = list(color = 'purple'), name = 'Without Exchange 2') %>%
add_trace(x = ~TotalCollectionNumber, y = ~AverageWeeksWithExchange, type = 'scatter', mode = 'lines', line = list(color = 'red'), name = 'With Exchange') %>%
layout(title = 'Average Weeks vs TotalCollectionNumber',
xaxis = list(title = 'TotalCollectionNumber'),
yaxis = list(title = 'AverageWeeks',rangemode = "tozero", range = c(0, max_range), showline = TRUE)) %>%
# Ajouter une annotation pour le point de croisement
add_annotations(x = TotalCollectionNumber[crossing_point_index],
y = AverageWeeksWithExchange[crossing_point_index],
text = paste("Point de croisement:<br>x =", TotalCollectionNumber[crossing_point_index], "<br>y =", AverageWeeksWithExchange[crossing_point_index]),
showarrow = TRUE, arrowhead = 100, ax = 0, ay = -45,arrowcolor = "blue",  arrowsize = 1,
arrowwidth = 3,
xref = 'x', yref = 'y')
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Les données fournies
data <- read.csv("nombre_paquet_a_acheter_en_fct_de_prix_echange_avec_1_2_3_4_5_vignette_par_cereale.csv")
# Renommer les colonnes pour éviter les problèmes avec plot_ly
colnames(data) <- c("PrixD_Echange", "Function_1", "Function_2", "Function_3", "Function_4", "Function_5")
# Extraire les variables
PrixD_Echange <- data$PrixD_Echange
Function_1 <- data$Function_1
Function_2 <- data$Function_2
Function_3 <- data$Function_3
Function_4 <- data$Function_4
Function_5 <- data$Function_5
# Trouver la plage maximale pour l'axe des ordonnées
max_range <- max(Function_1, Function_2, Function_3, Function_4, Function_5) + 100
# Tracer les courbes interactives avec Plotly
plot_ly() %>%
add_trace(x = ~PrixD_Echange, y = ~Function_1, name = '1 vignette dans le céréale', type = 'scatter', mode = 'lines') %>%
add_trace(x = ~PrixD_Echange, y = ~Function_2, name = '2 vignette dans le céréale', type = 'scatter', mode = 'lines') %>%
add_trace(x = ~PrixD_Echange, y = ~Function_3, name = '3 vignette dans le céréale', type = 'scatter', mode = 'lines') %>%
add_trace(x = ~PrixD_Echange, y = ~Function_4, name = '4 vignette dans le céréale', type = 'scatter', mode = 'lines') %>%
add_trace(x = ~PrixD_Echange, y = ~Function_5, name = '5 vignette dans le céréale', type = 'scatter', mode = 'lines') %>%
layout(title = 'nombre de semaines (collection de 500) VS prix d echange pour nombre de vignettes 1 2 3 4 5',
xaxis = list(title = 'Prix d\'echange'),
yaxis = list(title = 'nombres de paquets a acheter/nombre de semaines', rangemode = "tozero", range = c(0, max_range), showline = TRUE))
# Afficher le graphique interactif
# Installer la bibliothèque Plotly si ce n'est pas déjà fait
# install.packages("plotly")
# Charger la bibliothèque Plotly
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Les données du fichier CSV
data <- read.csv("_CollectionNumber_en_fonction_du_taux_echange_pour_croiser_deux_courbe_avec_vignetteNumber_2.csv")
# Tracer la courbe
plot <- plot_ly(data, x = ~PrixD_Echange, y = ~NbrTotalDeCollection, type = 'scatter', mode = 'lines+markers')
# Ajouter un titre au graphique
plot <- plot %>% layout(title = "Courbe de NbrTotalDeCollection en fonction de PrixD_Echange")
# Ajuster un modèle linéaire
model <- lm(NbrTotalDeCollection ~ PrixD_Echange, data = data)
# Ajouter la droite d'approximation
plot <- add_trace(plot, x = data$PrixD_Echange, y = predict(model), mode = 'lines', type = 'scatter', name = 'Droite d\'approximation')
# Afficher la figure
print(plot)
# Installer la bibliothèque Plotly si ce n'est pas déjà fait
# install.packages("plotly")
# Charger la bibliothèque Plotly
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Les données du fichier CSV
data <- read.csv("_CollectionNumber_en_fonction_du_taux_echange_pour_croiser_deux_courbe_avec_vignetteNumber_2.csv")
# Tracer la courbe
plot <- plot_ly(data, x = ~PrixD_Echange, y = ~NbrTotalDeCollection, type = 'scatter', mode = 'lines+markers')
# Ajouter un titre au graphique
plot <- plot %>% layout(title = "Courbe de NbrTotalDeCollection en fonction de PrixD_Echange")
# Ajuster un modèle linéaire
model <- lm(NbrTotalDeCollection ~ PrixD_Echange, data = data)
# Ajouter la droite d'approximation
plot <- add_trace(plot, x = data$PrixD_Echange, y = predict(model), mode = 'lines', type = 'scatter', name = 'Droite d\'approximation')
# Afficher la figure
print(plot)
# Installer la bibliothèque Plotly si ce n'est pas déjà fait
# install.packages("plotly")
# Charger la bibliothèque Plotly
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Les données du fichier CSV
data <- read.csv("_CollectionNumber_en_fonction_du_taux_echange_pour_croiser_deux_courbe_avec_vignetteNumber_2.csv")
# Tracer la courbe
plot <- plot_ly(data, x = ~PrixD_Echange, y = ~NbrTotalDeCollection, type = 'scatter', mode = 'lines+markers', name="points de croissement")
# Ajouter un titre au graphique
plot <- plot %>% layout(title = "Courbe de NbrTotalDeCollection en fonction de PrixD_Echange")
# Ajuster un modèle linéaire
model <- lm(NbrTotalDeCollection ~ PrixD_Echange, data = data)
# Ajouter la droite d'approximation
plot <- add_trace(plot, x = data$PrixD_Echange, y = predict(model), mode = 'lines', type = 'scatter', name = 'Droite d\'approximation')
# Afficher la figure
print(plot)
# install.packages("plotly")
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Lire le fichier CSV
data <- read.csv("_SemaineEnFonctionDeNombreA_Collecte_Avec_2_Determiner_taux_d_echange.csv")
AverageWeeksWithExchange<-data$AverageWeeksWithExchange
AverageWeeksWithoutExchange<-data$AverageWeeksWithoutExchange
TotalCollectionNumber<-data$NbrTotalDeCollection
# Trouver l'index du point de croisement des courbes
crossing_point_index <- which(AverageWeeksWithExchange < AverageWeeksWithoutExchange)[1]
max_range <- max(AverageWeeksWithExchange, AverageWeeksWithoutExchange) + 100
# Créer le graphique interactif avec plotly
plot_ly(x = ~TotalCollectionNumber, y = ~AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines', line = list(color = 'purple'), name = 'Without Exchange 2') %>%
add_trace(x = ~TotalCollectionNumber, y = ~AverageWeeksWithExchange, type = 'scatter', mode = 'lines', line = list(color = 'red'), name = 'With Exchange') %>%
layout(title = 'Average Weeks vs TotalCollectionNumber',
xaxis = list(title = 'TotalCollectionNumber'),
yaxis = list(title = 'AverageWeeks',rangemode = "tozero", range = c(0, max_range), showline = TRUE)) %>%
# Ajouter une annotation pour le point de croisement
add_annotations(x = TotalCollectionNumber[crossing_point_index],
y = AverageWeeksWithExchange[crossing_point_index],
text = paste("Point de croisement:<br>x =", TotalCollectionNumber[crossing_point_index], "<br>y =", AverageWeeksWithExchange[crossing_point_index]),
showarrow = TRUE, arrowhead = 100, ax = 0, ay = -45,arrowcolor = "blue",  arrowsize = 1,
arrowwidth = 3,
xref = 'x', yref = 'y')
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Les données fournies
data <- read.csv("nombre_paquet_a_acheter_en_fct_de_prix_echange_avec_1_2_3_4_5_vignette_par_cereale.csv")
# Renommer les colonnes pour éviter les problèmes avec plot_ly
colnames(data) <- c("PrixD_Echange", "Function_1", "Function_2", "Function_3", "Function_4", "Function_5")
# Extraire les variables
PrixD_Echange <- data$PrixD_Echange
Function_1 <- data$Function_1
Function_2 <- data$Function_2
Function_3 <- data$Function_3
Function_4 <- data$Function_4
Function_5 <- data$Function_5
# Trouver la plage maximale pour l'axe des ordonnées
max_range <- max(Function_1, Function_2, Function_3, Function_4, Function_5) + 100
# Tracer les courbes interactives avec Plotly
plot_ly() %>%
add_trace(x = ~PrixD_Echange, y = ~Function_1, name = '1 vignette dans le céréale', type = 'scatter', mode = 'lines') %>%
add_trace(x = ~PrixD_Echange, y = ~Function_2, name = '2 vignette dans le céréale', type = 'scatter', mode = 'lines') %>%
add_trace(x = ~PrixD_Echange, y = ~Function_3, name = '3 vignette dans le céréale', type = 'scatter', mode = 'lines') %>%
add_trace(x = ~PrixD_Echange, y = ~Function_4, name = '4 vignette dans le céréale', type = 'scatter', mode = 'lines') %>%
add_trace(x = ~PrixD_Echange, y = ~Function_5, name = '5 vignette dans le céréale', type = 'scatter', mode = 'lines') %>%
layout(title = 'nombre de semaines (collection de 500) VS prix d echange pour nombre de vignettes 1 2 3 4 5',
xaxis = list(title = 'Prix d\'echange'),
yaxis = list(title = 'nombres de paquets a acheter/nombre de semaines', rangemode = "tozero", range = c(0, max_range), showline = TRUE))
# Afficher le graphique interactif
# Installer la bibliothèque Plotly si ce n'est pas déjà fait
# install.packages("plotly")
# Charger la bibliothèque Plotly
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Les données du fichier CSV
data <- read.csv("_CollectionNumber_en_fonction_du_taux_echange_pour_croiser_deux_courbe_avec_vignetteNumber_2.csv")
# Tracer la courbe
plot <- plot_ly(data, x = ~PrixD_Echange, y = ~NbrTotalDeCollection, type = 'scatter', mode = 'lines+markers', name="points de croissement")
# Ajouter un titre au graphique
plot <- plot %>% layout(title = "Courbe de NbrTotalDeCollection en fonction de PrixD_Echange")
# Ajuster un modèle linéaire
model <- lm(NbrTotalDeCollection ~ PrixD_Echange, data = data)
# Ajouter la droite d'approximation
plot <- add_trace(plot, x = data$PrixD_Echange, y = predict(model), mode = 'lines', type = 'scatter', name = 'Droite d\'approximation')
# Afficher la figure
print(plot)
# Install and load the required library
#install.packages("plotly")
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Read CSV file
data <- read.csv("_SemainesEnFonctionDeNombreA_Collecte.csv")
data2 <- read.csv("_SemainesEnFonctionDeNombreA_Collecte_Avec_2.csv")
# Extract data for plotting
TotalCollectionNumber <- data$NbrTotalDeCollection
AverageWeeksWithoutExchange <- data$AverageWeeksWithoutExchange
AverageWeeksWithExchange <- data$AverageWeeksWithExchange
AverageWeeksWithoutExchange2 <- data2$AverageWeeksWithoutExchange
AverageWeeksWithExchange2 <- data2$AverageWeeksWithExchange
# Theoretical Value
theoreticalValues <- sapply(TotalCollectionNumber, function(collectionNumber) {
sum(1 / (1:collectionNumber)) * collectionNumber
})
# Calculate the maximum range for the y-axis
max_range <- max(max(AverageWeeksWithoutExchange, AverageWeeksWithExchange, AverageWeeksWithoutExchange2, AverageWeeksWithExchange2, theoreticalValues)) + 100
# Create a plotly object
p <- plot_ly()
# Add traces for each curve
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines', line = list(color = 'blue'), name = 'Without Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange, type = 'scatter', mode = 'lines', line = list(color = 'red'), name = 'With Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange2, type = 'scatter', mode = 'lines', line = list(color = 'purple'), name = '2 Without Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange2, type = 'scatter', mode = 'lines', line = list(color = 'orange'), name = '2 With Exchange')
# Theoretical Value
p <- add_trace(p, x = TotalCollectionNumber, y = theoreticalValues, type = 'scatter', mode = 'lines', line = list(color = 'green'), name = 'Theoretical Value')
# Update layout
p <- p %>%
layout(
xaxis = list(title = 'TotalCollectionNumber'),
yaxis = list(
title = 'nombres de paquets a acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Average Weeks vs TotalCollectionNumber'
)
# Display the plot
p
# Install and load the required library
#install.packages("plotly")
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Read CSV file
data <- read.csv("_SemainesEnFonctionDeNombreA_Collecte.csv")
data2 <- read.csv("_SemainesEnFonctionDeNombreA_Collecte_Avec_2.csv")
# Extract data for plotting
TotalCollectionNumber <- data$NbrTotalDeCollection
AverageWeeksWithoutExchange <- data$AverageWeeksWithoutExchange
AverageWeeksWithExchange <- data$AverageWeeksWithExchange
AverageWeeksWithoutExchange2 <- data2$AverageWeeksWithoutExchange
AverageWeeksWithExchange2 <- data2$AverageWeeksWithExchange
# Theoretical Value
theoreticalValues <- sapply(TotalCollectionNumber, function(collectionNumber) {
sum(1 / (1:collectionNumber)) * collectionNumber
})
# Calculate the maximum range for the y-axis
max_range <- max(max(AverageWeeksWithoutExchange, AverageWeeksWithExchange, AverageWeeksWithoutExchange2, AverageWeeksWithExchange2, theoreticalValues)) + 100
# Create a plotly object
p <- plot_ly()
# Add traces for each curve
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines', line = list(color = 'blue'), name = 'Without Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange, type = 'scatter', mode = 'lines', line = list(color = 'red'), name = 'With Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange2, type = 'scatter', mode = 'lines', line = list(color = 'purple'), name = '2 Without Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange2, type = 'scatter', mode = 'lines', line = list(color = 'orange'), name = '2 With Exchange')
# Theoretical Value
p <- add_trace(p, x = TotalCollectionNumber, y = theoreticalValues, type = 'scatter', mode = 'lines', line = list(color = 'green'), name = 'Theoretical Value')
# Update layout
p <- p %>%
layout(
xaxis = list(title = 'TotalCollectionNumber'),
yaxis = list(
title = 'nombres de paquets a acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Average Weeks vs TotalCollectionNumber'
)
# Display the plot
p
# Install and load the required library
#install.packages("plotly")
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Read CSV file
data <- read.csv("_SemainesEnFonctionDeNombreA_Collecte.csv")
data2 <- read.csv("_SemainesEnFonctionDeNombreA_Collecte_Avec_2.csv")
# Extract data for plotting
TotalCollectionNumber <- data$NbrTotalDeCollection
AverageWeeksWithoutExchange <- data$AverageWeeksWithoutExchange
AverageWeeksWithExchange <- data$AverageWeeksWithExchange
AverageWeeksWithoutExchange2 <- data2$AverageWeeksWithoutExchange
AverageWeeksWithExchange2 <- data2$AverageWeeksWithExchange
# Theoretical Value
theoreticalValues <- sapply(TotalCollectionNumber, function(collectionNumber) {
sum(1 / (1:collectionNumber)) * collectionNumber
})
# Calculate the maximum range for the y-axis
max_range <- max(max(AverageWeeksWithoutExchange, AverageWeeksWithExchange, AverageWeeksWithoutExchange2, AverageWeeksWithExchange2, theoreticalValues)) + 100
# Create a plotly object
p <- plot_ly()
# Add traces for each curve
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines+markers', line = list(color = 'blue'), name = 'Without Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange, type = 'scatter', mode = 'lines+markers', line = list(color = 'red'), name = 'With Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange2, type = 'scatter', mode = 'lines+markers', line = list(color = 'purple'), name = '2 Without Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange2, type = 'scatter', mode = 'lines+markers', line = list(color = 'orange'), name = '2 With Exchange')
# Theoretical Value
p <- add_trace(p, x = TotalCollectionNumber, y = theoreticalValues, type = 'scatter', mode = 'lines+markers', line = list(color = 'green'), name = 'Theoretical Value')
# Update layout
p <- p %>%
layout(
xaxis = list(title = 'TotalCollectionNumber'),
yaxis = list(
title = 'nombres de paquets a acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Average Weeks vs TotalCollectionNumber'
)
# Display the plot
p
# Installer la bibliothèque Plotly si ce n'est pas déjà fait
# install.packages("plotly")
# Charger la bibliothèque Plotly
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Les données du fichier CSV
data <- read.csv("_CollectionNumber_en_fonction_du_taux_echange_pour_croiser_deux_courbe_avec_vignetteNumber_2.csv")
# Tracer la courbe
plot <- plot_ly(data, x = ~PrixD_Echange, y = ~NbrTotalDeCollection, type = 'scatter', mode = 'lines+markers', name="points de croissement")
# Ajouter un titre au graphique
plot <- plot %>% layout(title = "Courbe de NbrTotalDeCollection en fonction de PrixD_Echange")
# Ajuster un modèle linéaire
model <- lm(NbrTotalDeCollection ~ PrixD_Echange, data = data)
# Ajouter la droite d'approximation
plot <- add_trace(plot, x = data$PrixD_Echange, y = predict(model), mode = 'lines', type = 'scatter', name = 'Droite d\'approximation')
# Afficher la figure
print(plot)
# Install and load the required library
#install.packages("plotly")
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Read CSV file
data <- read.csv("_SemainesEnFonctionDeNombreA_Collecte.csv")
data2 <- read.csv("_SemainesEnFonctionDeNombreA_Collecte_Avec_2.csv")
# Extract data for plotting
TotalCollectionNumber <- data$NbrTotalDeCollection
AverageWeeksWithoutExchange <- data$AverageWeeksWithoutExchange
AverageWeeksWithExchange <- data$AverageWeeksWithExchange
AverageWeeksWithoutExchange2 <- data2$AverageWeeksWithoutExchange
AverageWeeksWithExchange2 <- data2$AverageWeeksWithExchange
# Theoretical Value
theoreticalValues <- sapply(TotalCollectionNumber, function(collectionNumber) {
sum(1 / (1:collectionNumber)) * collectionNumber
})
# Calculate the maximum range for the y-axis
max_range <- max(max(AverageWeeksWithoutExchange, AverageWeeksWithExchange, AverageWeeksWithoutExchange2, AverageWeeksWithExchange2, theoreticalValues)) + 100
# Create a plotly object
p <- plot_ly()
# Add traces for each curve
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines+markers', line = list(color = 'blue'), marker = list(color = 'blue'), name = 'Without Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange, type = 'scatter', mode = 'lines+markers', line = list(color = 'red'), marker = list(color = 'red'), name = 'With Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange2, type = 'scatter', mode = 'lines+markers', line = list(color = 'purple'), marker = list(color = 'purple'), name = '2 Without Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange2, type = 'scatter', mode = 'lines+markers', line = list(color = 'orange'), marker = list(color = 'orange'), name = '2 With Exchange')
# Theoretical Value
p <- add_trace(p, x = TotalCollectionNumber, y = theoreticalValues, type = 'scatter', mode = 'lines+markers', line = list(color = 'green'), marker = list(color = 'green'), name = 'Theoretical Value')
# Update layout
p <- p %>%
layout(
xaxis = list(title = 'TotalCollectionNumber'),
yaxis = list(
title = 'nombres de paquets a acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Average Weeks vs TotalCollectionNumber'
)
# Display the plot
p
# Install and load the required library
#install.packages("plotly")
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Read CSV file
data <- read.csv("_SemainesEnFonctionDeNombreA_Collecte.csv")
data2 <- read.csv("_SemainesEnFonctionDeNombreA_Collecte_Avec_2.csv")
# Extract data for plotting
TotalCollectionNumber <- data$NbrTotalDeCollection
AverageWeeksWithoutExchange <- data$AverageWeeksWithoutExchange
AverageWeeksWithExchange <- data$AverageWeeksWithExchange
AverageWeeksWithoutExchange2 <- data2$AverageWeeksWithoutExchange
AverageWeeksWithExchange2 <- data2$AverageWeeksWithExchange
# Theoretical Value
theoreticalValues <- sapply(TotalCollectionNumber, function(collectionNumber) {
sum(1 / (1:collectionNumber)) * collectionNumber
})
# Calculate the maximum range for the y-axis
max_range <- max(max(AverageWeeksWithoutExchange, AverageWeeksWithExchange, AverageWeeksWithoutExchange2, AverageWeeksWithExchange2, theoreticalValues)) + 100
# Créer un objet plotly
p <- plot_ly()
# Ajouter des traces pour chaque courbe
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines+markers', line = list(color = 'blue'), marker = list(color = 'blue', size = 4), name = 'Without Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange, type = 'scatter', mode = 'lines+markers', line = list(color = 'red'), marker = list(color = 'red', size = 4), name = 'With Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange2, type = 'scatter', mode = 'lines+markers', line = list(color = 'purple'), marker = list(color = 'purple', size = 4), name = '2 Without Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange2, type = 'scatter', mode = 'lines+markers', line = list(color = 'orange'), marker = list(color = 'orange', size = 4), name = '2 With Exchange')
# Valeur théorique
p <- add_trace(p, x = TotalCollectionNumber, y = theoreticalValues, type = 'scatter', mode = 'lines+markers', line = list(color = 'green'), marker = list(color = 'green', size = 4), name = 'Theoretical Value')
# Mise à jour de la mise en page
p <- p %>%
layout(
xaxis = list(title = 'TotalCollectionNumber'),
yaxis = list(
title = 'nombres de paquets a acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Average Weeks vs TotalCollectionNumber'
)
# Afficher le graphique
p
# Install and load the required library
#install.packages("plotly")
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Read CSV file
data <- read.csv("_SemainesEnFonctionDeNombreA_Collecte.csv")
data2 <- read.csv("_SemainesEnFonctionDeNombreA_Collecte_Avec_2.csv")
# Extract data for plotting
TotalCollectionNumber <- data$NbrTotalDeCollection
AverageWeeksWithoutExchange <- data$AverageWeeksWithoutExchange
AverageWeeksWithExchange <- data$AverageWeeksWithExchange
AverageWeeksWithoutExchange2 <- data2$AverageWeeksWithoutExchange
AverageWeeksWithExchange2 <- data2$AverageWeeksWithExchange
# Theoretical Value
theoreticalValues <- sapply(TotalCollectionNumber, function(collectionNumber) {
sum(1 / (1:collectionNumber)) * collectionNumber
})
# Calculate the maximum range for the y-axis
max_range <- max(max(AverageWeeksWithoutExchange, AverageWeeksWithExchange, AverageWeeksWithoutExchange2, AverageWeeksWithExchange2, theoreticalValues)) + 100
# Créer un objet plotly
p <- plot_ly()
# Ajouter des traces pour chaque courbe
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines+markers', line = list(color = 'blue'), marker = list(color = 'blue', size = 3), name = 'Without Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange, type = 'scatter', mode = 'lines+markers', line = list(color = 'red'), marker = list(color = 'red', size = 3), name = 'With Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange2, type = 'scatter', mode = 'lines+markers', line = list(color = 'purple'), marker = list(color = 'purple', size = 2), name = '2 Without Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange2, type = 'scatter', mode = 'lines+markers', line = list(color = 'orange'), marker = list(color = 'orange', size = 1), name = '2 With Exchange')
# Valeur théorique
p <- add_trace(p, x = TotalCollectionNumber, y = theoreticalValues, type = 'scatter', mode = 'lines+markers', line = list(color = 'green'), marker = list(color = 'green', size = 4), name = 'Theoretical Value')
# Mise à jour de la mise en page
p <- p %>%
layout(
xaxis = list(title = 'TotalCollectionNumber'),
yaxis = list(
title = 'nombres de paquets a acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Average Weeks vs TotalCollectionNumber'
)
# Afficher le graphique
p
# Install and load the required library
#install.packages("plotly")
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Read CSV file
data <- read.csv("_SemainesEnFonctionDeNombreA_Collecte.csv")
data2 <- read.csv("_SemainesEnFonctionDeNombreA_Collecte_Avec_2.csv")
# Extract data for plotting
TotalCollectionNumber <- data$NbrTotalDeCollection
AverageWeeksWithoutExchange <- data$AverageWeeksWithoutExchange
AverageWeeksWithExchange <- data$AverageWeeksWithExchange
AverageWeeksWithoutExchange2 <- data2$AverageWeeksWithoutExchange
AverageWeeksWithExchange2 <- data2$AverageWeeksWithExchange
# Theoretical Value
theoreticalValues <- sapply(TotalCollectionNumber, function(collectionNumber) {
sum(1 / (1:collectionNumber)) * collectionNumber
})
# Calculate the maximum range for the y-axis
max_range <- max(max(AverageWeeksWithoutExchange, AverageWeeksWithExchange, AverageWeeksWithoutExchange2, AverageWeeksWithExchange2, theoreticalValues)) + 100
# Créer un objet plotly
p <- plot_ly()
# Ajouter des traces pour chaque courbe
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines+markers', line = list(color = 'blue'), marker = list(color = 'blue', size = 3), name = 'Without Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange, type = 'scatter', mode = 'lines+markers', line = list(color = 'red'), marker = list(color = 'red', size = 3), name = 'With Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange2, type = 'scatter', mode = 'lines+markers', line = list(color = 'purple'), marker = list(color = 'purple', size = 3), name = '2 Without Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange2, type = 'scatter', mode = 'lines+markers', line = list(color = 'orange'), marker = list(color = 'orange', size = 3), name = '2 With Exchange')
# Valeur théorique
p <- add_trace(p, x = TotalCollectionNumber, y = theoreticalValues, type = 'scatter', mode = 'lines+markers', line = list(color = 'green'), marker = list(color = 'green', size = 3), name = 'Theoretical Value')
# Mise à jour de la mise en page
p <- p %>%
layout(
xaxis = list(title = 'TotalCollectionNumber'),
yaxis = list(
title = 'nombres de paquets a acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Average Weeks vs TotalCollectionNumber'
)
# Afficher le graphique
p
