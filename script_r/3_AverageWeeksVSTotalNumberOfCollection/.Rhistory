title = 'nombres de paquets a acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Average Weeks vs TotalCollectionNumber'
)
# Afficher le graphique
p
rm(list = ls())
# Install and load the required library
#install.packages("plotly")
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Read CSV file
data <- read.csv("_SemainesEnFonctionDeNombreA_Collecte.csv")
data2 <- read.csv("_SemainesEnFonctionDeNombreA_Collecte_Avec_2.csv")
# Extract data for plotting
TotalCollectionNumber <- data$NbrTotalDeCollection
AverageWeeksWithoutExchange <- data$AverageWeeksWithoutExchange
AverageWeeksWithExchange <- data$AverageWeeksWithExchange
AverageWeeksWithoutExchange2 <- data2$AverageWeeksWithoutExchange
AverageWeeksWithExchange2 <- data2$AverageWeeksWithExchange
# Theoretical Value
theoreticalValues <- sapply(TotalCollectionNumber, function(collectionNumber) {
sum(1 / (1:collectionNumber)) * collectionNumber
})
# Calculate the maximum range for the y-axis
max_range <- max(max(AverageWeeksWithoutExchange, AverageWeeksWithExchange, AverageWeeksWithoutExchange2, AverageWeeksWithExchange2, theoreticalValues)) + 100
# Créer un objet plotly
p <- plot_ly()
# Ajouter des traces pour chaque courbe
#mode = 'lines+markers'
#marker = list(color = 'blue', size = 3)
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines', line = list(color = 'blue'),  name = 'Without Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange, type = 'scatter', mode = 'lines', line = list(color = 'red'),  name = 'With Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange2, type = 'scatter', mode = 'lines', line = list(color = 'purple'),  name = '2 Without Exchange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange2, type = 'scatter', mode = 'lines', line = list(color = 'orange'), name = '2 With Exchange')
# Valeur théorique
p <- add_trace(p, x = TotalCollectionNumber, y = theoreticalValues, type = 'scatter', mode = 'lines', line = list(color = 'green'),  name = 'Theoretical Value')
# Mise à jour de la mise en page
p <- p %>%
layout(
xaxis = list(title = 'Nombre vignettes dans la collection'),
yaxis = list(
title = 'nombres de paquets à acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Nombre de semaines en fonction du nombre de vignettes necessaires pour completer la collection (avec/sans echange, 1/2 vignettes dans paquet de céréale)'
)
# Afficher le graphique
p
# Install and load the required library
#install.packages("plotly")
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Read CSV file
data <- read.csv("_SemainesEnFonctionDeNombreA_Collecte.csv")
data2 <- read.csv("_SemainesEnFonctionDeNombreA_Collecte_Avec_2.csv")
# Extract data for plotting
TotalCollectionNumber <- data$NbrTotalDeCollection
AverageWeeksWithoutExchange <- data$AverageWeeksWithoutExchange
AverageWeeksWithExchange <- data$AverageWeeksWithExchange
AverageWeeksWithoutExchange2 <- data2$AverageWeeksWithoutExchange
AverageWeeksWithExchange2 <- data2$AverageWeeksWithExchange
# Theoretical Value
theoreticalValues <- sapply(TotalCollectionNumber, function(collectionNumber) {
sum(1 / (1:collectionNumber)) * collectionNumber
})
# Calculate the maximum range for the y-axis
max_range <- max(max(AverageWeeksWithoutExchange, AverageWeeksWithExchange, AverageWeeksWithoutExchange2, AverageWeeksWithExchange2, theoreticalValues)) + 100
# Créer un objet plotly
p <- plot_ly()
# Ajouter des traces pour chaque courbe
#mode = 'lines+markers'
#marker = list(color = 'blue', size = 3)
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines', line = list(color = 'blue'),  name = 'Sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange, type = 'scatter', mode = 'lines', line = list(color = 'red'),  name = 'Avec echange de 10 doublons')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange2, type = 'scatter', mode = 'lines', line = list(color = 'purple'),  name = '2 vignettes sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange2, type = 'scatter', mode = 'lines', line = list(color = 'orange'), name = '2 vignettes Avec echange')
# Valeur théorique
p <- add_trace(p, x = TotalCollectionNumber, y = theoreticalValues, type = 'scatter', mode = 'lines', line = list(color = 'green'),  name = 'Valeurs théorique')
# Mise à jour de la mise en page
p <- p %>%
layout(
xaxis = list(title = 'Nombre vignettes dans la collection'),
yaxis = list(
title = 'nombres de paquets à acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Nombre de semaines en fonction du nombre de vignettes necessaires pour completer la collection (avec/sans echange, 1/2 vignettes dans paquet de céréale)'
)
# Afficher le graphique
p
# Install and load the required library
#install.packages("plotly")
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Read CSV file
data <- read.csv("_SemainesEnFonctionDeNombreA_Collecte.csv")
data2 <- read.csv("_SemainesEnFonctionDeNombreA_Collecte_Avec_2.csv")
# Extract data for plotting
TotalCollectionNumber <- data$NbrTotalDeCollection
AverageWeeksWithoutExchange <- data$AverageWeeksWithoutExchange
AverageWeeksWithExchange <- data$AverageWeeksWithExchange
AverageWeeksWithoutExchange2 <- data2$AverageWeeksWithoutExchange
AverageWeeksWithExchange2 <- data2$AverageWeeksWithExchange
# Theoretical Value
theoreticalValues <- sapply(TotalCollectionNumber, function(collectionNumber) {
sum(1 / (1:collectionNumber)) * collectionNumber
})
# Calculate the maximum range for the y-axis
max_range <- max(max(AverageWeeksWithoutExchange, AverageWeeksWithExchange, AverageWeeksWithoutExchange2, AverageWeeksWithExchange2, theoreticalValues)) + 100
# Créer un objet plotly
p <- plot_ly()
# Ajouter des traces pour chaque courbe
#mode = 'lines+markers'
#marker = list(color = 'blue', size = 3)
# Valeur théorique
p <- add_trace(p, x = TotalCollectionNumber, y = theoreticalValues, type = 'scatter', mode = 'lines', line = list(color = 'green'),  name = 'Valeurs théorique')
# valeurs calculées
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines', line = list(color = 'blue'),  name = 'Sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange, type = 'scatter', mode = 'lines', line = list(color = 'red'),  name = 'Avec echange de 10 doublons')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange2, type = 'scatter', mode = 'lines', line = list(color = 'purple'),  name = '2 vignettes sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange2, type = 'scatter', mode = 'lines', line = list(color = 'orange'), name = '2 vignettes Avec echange')
# Mise à jour de la mise en page
p <- p %>%
layout(
xaxis = list(title = 'Nombre vignettes dans la collection'),
yaxis = list(
title = 'nombres de paquets à acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Nombre de semaines en fonction du nombre de vignettes necessaires pour completer la collection (avec/sans echange, 1/2 vignettes dans paquet de céréale)'
)
# Afficher le graphique
p
# Install and load the required library
#install.packages("plotly")
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Read CSV file
data <- read.csv("_SemainesEnFonctionDeNombreA_Collecte.csv")
data2 <- read.csv("_SemainesEnFonctionDeNombreA_Collecte_Avec_2.csv")
# Extract data for plotting
TotalCollectionNumber <- data$NbrTotalDeCollection
AverageWeeksWithoutExchange <- data$AverageWeeksWithoutExchange
AverageWeeksWithExchange <- data$AverageWeeksWithExchange
AverageWeeksWithoutExchange2 <- data2$AverageWeeksWithoutExchange
AverageWeeksWithExchange2 <- data2$AverageWeeksWithExchange
# Theoretical Value
theoreticalValues <- sapply(TotalCollectionNumber, function(collectionNumber) {
sum(1 / (1:collectionNumber)) * collectionNumber
})
# Calculate the maximum range for the y-axis
max_range <- max(max(AverageWeeksWithoutExchange, AverageWeeksWithExchange, AverageWeeksWithoutExchange2, AverageWeeksWithExchange2, theoreticalValues)) + 100
# Créer un objet plotly
p <- plot_ly()
# Ajouter des traces pour chaque courbe
#mode = 'lines+markers'
#marker = list(color = 'blue', size = 3)
# Valeur théorique
p <- add_trace(p, x = TotalCollectionNumber, y = theoreticalValues, type = 'scatter', mode = 'lines', line = list(color = 'black'),  name = 'Valeurs théorique')
# valeurs calculées
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines', line = list(color = 'blue'),  name = 'Sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange, type = 'scatter', mode = 'lines', line = list(color = 'red'),  name = 'Avec echange de 10 doublons')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange2, type = 'scatter', mode = 'lines', line = list(color = 'purple'),  name = '2 vignettes sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange2, type = 'scatter', mode = 'lines', line = list(color = 'orange'), name = '2 vignettes Avec echange')
# Mise à jour de la mise en page
p <- p %>%
layout(
xaxis = list(title = 'Nombre vignettes dans la collection'),
yaxis = list(
title = 'nombres de paquets à acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Nombre de semaines en fonction du nombre de vignettes necessaires pour completer la collection (avec/sans echange, 1/2 vignettes dans paquet de céréale)'
)
# Afficher le graphique
p
# Install and load the required library
#install.packages("plotly")
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Read CSV file
data <- read.csv("_SemainesEnFonctionDeNombreA_Collecte.csv")
data2 <- read.csv("_SemainesEnFonctionDeNombreA_Collecte_Avec_2.csv")
# Extract data for plotting
TotalCollectionNumber <- data$NbrTotalDeCollection
AverageWeeksWithoutExchange <- data$AverageWeeksWithoutExchange
AverageWeeksWithExchange <- data$AverageWeeksWithExchange
AverageWeeksWithoutExchange2 <- data2$AverageWeeksWithoutExchange
AverageWeeksWithExchange2 <- data2$AverageWeeksWithExchange
# Theoretical Value
theoreticalValues <- sapply(TotalCollectionNumber, function(collectionNumber) {
sum(1 / (1:collectionNumber)) * collectionNumber
})
# Calculate the maximum range for the y-axis
max_range <- max(max(AverageWeeksWithoutExchange, AverageWeeksWithExchange, AverageWeeksWithoutExchange2, AverageWeeksWithExchange2, theoreticalValues)) + 100
# Créer un objet plotly
p <- plot_ly()
# Ajouter des traces pour chaque courbe
#mode = 'lines+markers'
#marker = list(color = 'blue', size = 3)
# Valeur théorique
p <- add_trace(p, x = TotalCollectionNumber, y = theoreticalValues, type = 'scatter', mode = 'lines', line = list(color = 'black'),  name = 'Valeurs théorique')
# valeurs calculées
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines', line = list(color = 'green'),  name = 'Sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange, type = 'scatter', mode = 'lines', line = list(color = 'red'),  name = 'Avec echange de 10 doublons')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange2, type = 'scatter', mode = 'lines', line = list(color = 'purple'),  name = '2 vignettes sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange2, type = 'scatter', mode = 'lines', line = list(color = 'orange'), name = '2 vignettes Avec echange')
# Mise à jour de la mise en page
p <- p %>%
layout(
xaxis = list(title = 'Nombre vignettes dans la collection'),
yaxis = list(
title = 'nombres de paquets à acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Nombre de semaines en fonction du nombre de vignettes necessaires pour completer la collection (avec/sans echange, 1/2 vignettes dans paquet de céréale)'
)
# Afficher le graphique
p
# Install and load the required library
#install.packages("plotly")
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Read CSV file
data <- read.csv("_SemainesEnFonctionDeNombreA_Collecte.csv")
data2 <- read.csv("_SemainesEnFonctionDeNombreA_Collecte_Avec_2.csv")
# Extract data for plotting
TotalCollectionNumber <- data$NbrTotalDeCollection
AverageWeeksWithoutExchange <- data$AverageWeeksWithoutExchange
AverageWeeksWithExchange <- data$AverageWeeksWithExchange
AverageWeeksWithoutExchange2 <- data2$AverageWeeksWithoutExchange
AverageWeeksWithExchange2 <- data2$AverageWeeksWithExchange
# Theoretical Value
theoreticalValues <- sapply(TotalCollectionNumber, function(collectionNumber) {
sum(1 / (1:collectionNumber)) * collectionNumber
})
# Calculate the maximum range for the y-axis
max_range <- max(max(AverageWeeksWithoutExchange, AverageWeeksWithExchange, AverageWeeksWithoutExchange2, AverageWeeksWithExchange2, theoreticalValues)) + 100
# Créer un objet plotly
p <- plot_ly()
# Ajouter des traces pour chaque courbe
#mode = 'lines+markers'
#marker = list(color = 'blue', size = 3)
# Valeur théorique
p <- add_trace(p, x = TotalCollectionNumber, y = theoreticalValues, type = 'scatter', mode = 'lines', line = list(color = 'blue'),  name = 'Valeurs théorique')
# valeurs calculées
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines', line = list(color = 'green'),  name = 'Sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange, type = 'scatter', mode = 'lines', line = list(color = 'red'),  name = 'Avec echange de 10 doublons')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange2, type = 'scatter', mode = 'lines', line = list(color = 'purple'),  name = '2 vignettes sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange2, type = 'scatter', mode = 'lines', line = list(color = 'orange'), name = '2 vignettes Avec echange')
# Mise à jour de la mise en page
p <- p %>%
layout(
xaxis = list(title = 'Nombre vignettes dans la collection'),
yaxis = list(
title = 'nombres de paquets à acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Nombre de semaines en fonction du nombre de vignettes necessaires pour completer la collection (avec/sans echange, 1/2 vignettes dans paquet de céréale)'
)
# Afficher le graphique
p
# Install and load the required library
# Install and load the required library
#install.packages("plotly")
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Read CSV file
data <- read.csv("_SemainesEnFonctionDeNombreA_Collecte.csv")
data2 <- read.csv("_SemainesEnFonctionDeNombreA_Collecte_Avec_2.csv")
# Extract data for plotting
TotalCollectionNumber <- data$NbrTotalDeCollection
AverageWeeksWithoutExchange <- data$AverageWeeksWithoutExchange
AverageWeeksWithExchange <- data$AverageWeeksWithExchange
AverageWeeksWithoutExchange2 <- data2$AverageWeeksWithoutExchange
AverageWeeksWithExchange2 <- data2$AverageWeeksWithExchange
# Theoretical Value
theoreticalValues <- sapply(TotalCollectionNumber, function(collectionNumber) {
sum(1 / (1:collectionNumber)) * collectionNumber
})
# Calculate the maximum range for the y-axis
max_range <- max(max(AverageWeeksWithoutExchange, AverageWeeksWithExchange, AverageWeeksWithoutExchange2, AverageWeeksWithExchange2, theoreticalValues)) + 100
# Créer un objet plotly
p <- plot_ly()
# Ajouter des traces pour chaque courbe
#mode = 'lines+markers'
#marker = list(color = 'blue', size = 3)
# Valeur théorique
p <- add_trace(p, x = TotalCollectionNumber, y = theoreticalValues, type = 'scatter', mode = 'lines', line = list(color = 'green'),  name = 'Valeurs théorique')
# valeurs calculées
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines', line = list(color = 'blue'),  name = '1 vignette Sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange, type = 'scatter', mode = 'lines', line = list(color = 'red'),  name = '1 vignette avec échange de 10 doublons')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange2, type = 'scatter', mode = 'lines', line = list(color = 'purple'),  name = '2 vignettes sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange2, type = 'scatter', mode = 'lines', line = list(color = 'orange'), name = '2 vignettes avec échange de 10 doublons')
# Mise à jour de la mise en page
p <- p %>%
layout(
xaxis = list(title = 'Nombre vignettes dans la collection'),
yaxis = list(
title = 'nombres de paquets à acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Nombre de semaines en fonction du nombre de vignettes necessaires pour completer la collection (avec/sans echange, 1/2 vignettes dans paquet de céréale)'
)
# Afficher le graphique
p
# Install and load the required library
#install.packages("plotly")
library(plotly)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Read CSV file
data <- read.csv("_SemainesEnFonctionDeNombreA_Collecte.csv")
data2 <- read.csv("_SemainesEnFonctionDeNombreA_Collecte_Avec_2.csv")
# Extract data for plotting
TotalCollectionNumber <- data$NbrTotalDeCollection
AverageWeeksWithoutExchange <- data$AverageWeeksWithoutExchange
AverageWeeksWithExchange <- data$AverageWeeksWithExchange
AverageWeeksWithoutExchange2 <- data2$AverageWeeksWithoutExchange
AverageWeeksWithExchange2 <- data2$AverageWeeksWithExchange
# Theoretical Value
theoreticalValues <- sapply(TotalCollectionNumber, function(collectionNumber) {
sum(1 / (1:collectionNumber)) * collectionNumber
})
# Calculate the maximum range for the y-axis
max_range <- max(max(AverageWeeksWithoutExchange, AverageWeeksWithExchange, AverageWeeksWithoutExchange2, AverageWeeksWithExchange2, theoreticalValues)) + 100
# Créer un objet plotly
p <- plot_ly()
# Ajouter des traces pour chaque courbe
#mode = 'lines+markers'
#marker = list(color = 'blue', size = 3)
# Valeur théorique
p <- add_trace(p, x = TotalCollectionNumber, y = theoreticalValues, type = 'scatter', mode = 'lines', line = list(color = 'green'),  name = 'Valeurs théorique')
# valeurs calculées
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines', line = list(color = 'blue'),  name = '1 vignette Sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange, type = 'scatter', mode = 'lines', line = list(color = 'red'),  name = '1 vignette avec échange de 10 doublons')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange2, type = 'scatter', mode = 'lines', line = list(color = 'purple'),  name = '2 vignettes sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange2, type = 'scatter', mode = 'lines', line = list(color = 'orange'), name = '2 vignettes avec échange de 10 doublons')
# Mise à jour de la mise en page
p <- p %>%
layout(
xaxis = list(title = 'Nombre vignettes dans la collection'),
yaxis = list(
title = 'nombres de paquets à acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Nombre de semaines en fonction du nombre de vignettes necessaires pour completer la collection (avec/sans echange, 1/2 vignettes dans paquet de céréale)'
)
# Afficher le graphique
p
install.packages("orca")
# Install and load the required library
#install.packages("orca") pour charger l image
#install.packages("plotly")
library(plotly)
library(orca)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Read CSV file
data <- read.csv("_SemainesEnFonctionDeNombreA_Collecte.csv")
data2 <- read.csv("_SemainesEnFonctionDeNombreA_Collecte_Avec_2.csv")
# Extract data for plotting
TotalCollectionNumber <- data$NbrTotalDeCollection
AverageWeeksWithoutExchange <- data$AverageWeeksWithoutExchange
AverageWeeksWithExchange <- data$AverageWeeksWithExchange
AverageWeeksWithoutExchange2 <- data2$AverageWeeksWithoutExchange
AverageWeeksWithExchange2 <- data2$AverageWeeksWithExchange
# Theoretical Value
theoreticalValues <- sapply(TotalCollectionNumber, function(collectionNumber) {
sum(1 / (1:collectionNumber)) * collectionNumber
})
# Calculate the maximum range for the y-axis
max_range <- max(max(AverageWeeksWithoutExchange, AverageWeeksWithExchange, AverageWeeksWithoutExchange2, AverageWeeksWithExchange2, theoreticalValues)) + 100
# Créer un objet plotly
p <- plot_ly()
# Ajouter des traces pour chaque courbe
#mode = 'lines+markers'
#marker = list(color = 'blue', size = 3)
# Valeur théorique
p <- add_trace(p, x = TotalCollectionNumber, y = theoreticalValues, type = 'scatter', mode = 'lines', line = list(color = 'green'),  name = 'Valeurs théorique')
# valeurs calculées
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines', line = list(color = 'blue'),  name = '1 vignette Sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange, type = 'scatter', mode = 'lines', line = list(color = 'red'),  name = '1 vignette avec échange de 10 doublons')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange2, type = 'scatter', mode = 'lines', line = list(color = 'purple'),  name = '2 vignettes sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange2, type = 'scatter', mode = 'lines', line = list(color = 'orange'), name = '2 vignettes avec échange de 10 doublons')
# Mise à jour de la mise en page
p <- p %>%
layout(
xaxis = list(title = 'Nombre vignettes dans la collection'),
yaxis = list(
title = 'nombres de paquets à acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Nombre de semaines en fonction du nombre de vignettes necessaires pour completer la collection (avec/sans echange, 1/2 vignettes dans paquet de céréale)'
)
# Afficher le graphique
p
rstudioapi::addShortcut("exportPNG", function() {
orca(p, file = "script_directory/mon_graphique.png", width = 800, height = 600)
}, accelerator = c("Ctrl+Alt+P"), title = "Export as PNG")
install.packages("miniUI")
# Install and load the required library
#install.packages("orca") pour charger l image
#install.packages("miniUI")
#install.packages("plotly")
library(plotly)
library(orca)
library(miniUI)
# Obtenez le chemin du répertoire du script R
script_directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
# Changez le répertoire de travail
setwd(script_directory)
# Read CSV file
data <- read.csv("_SemainesEnFonctionDeNombreA_Collecte.csv")
data2 <- read.csv("_SemainesEnFonctionDeNombreA_Collecte_Avec_2.csv")
# Extract data for plotting
TotalCollectionNumber <- data$NbrTotalDeCollection
AverageWeeksWithoutExchange <- data$AverageWeeksWithoutExchange
AverageWeeksWithExchange <- data$AverageWeeksWithExchange
AverageWeeksWithoutExchange2 <- data2$AverageWeeksWithoutExchange
AverageWeeksWithExchange2 <- data2$AverageWeeksWithExchange
# Theoretical Value
theoreticalValues <- sapply(TotalCollectionNumber, function(collectionNumber) {
sum(1 / (1:collectionNumber)) * collectionNumber
})
# Calculate the maximum range for the y-axis
max_range <- max(max(AverageWeeksWithoutExchange, AverageWeeksWithExchange, AverageWeeksWithoutExchange2, AverageWeeksWithExchange2, theoreticalValues)) + 100
# Créer un objet plotly
p <- plot_ly()
# Ajouter des traces pour chaque courbe
#mode = 'lines+markers'
#marker = list(color = 'blue', size = 3)
# Valeur théorique
p <- add_trace(p, x = TotalCollectionNumber, y = theoreticalValues, type = 'scatter', mode = 'lines', line = list(color = 'green'),  name = 'Valeurs théorique')
# valeurs calculées
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange, type = 'scatter', mode = 'lines', line = list(color = 'blue'),  name = '1 vignette Sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange, type = 'scatter', mode = 'lines', line = list(color = 'red'),  name = '1 vignette avec échange de 10 doublons')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithoutExchange2, type = 'scatter', mode = 'lines', line = list(color = 'purple'),  name = '2 vignettes sans echange')
p <- add_trace(p, x = TotalCollectionNumber, y = AverageWeeksWithExchange2, type = 'scatter', mode = 'lines', line = list(color = 'orange'), name = '2 vignettes avec échange de 10 doublons')
# Mise à jour de la mise en page
p <- p %>%
layout(
xaxis = list(title = 'Nombre vignettes dans la collection'),
yaxis = list(
title = 'nombres de paquets à acheter/nombre de semaines',
rangemode = "tozero",
range = c(0, max_range),
showline = TRUE
),
title = 'Nombre de semaines en fonction du nombre de vignettes necessaires pour completer la collection (avec/sans echange, 1/2 vignettes dans paquet de céréale)'
)
# Afficher le graphique
p
# Fonction pour sauvegarder le graphique en tant qu'image PNG
savePlotAsPNG <- function() {
orca(p, file = "script_directory/mon_graphique.png", width = 800, height = 600)
}
# Ajouter l'addin RStudio
addRStudioAddin(
"Export as PNG",
savePlotAsPNG
)
install.packages("shiny")
install.packages("shiny")
library(shiny); runApp('AverageWeeksVSTotalNumberOfCollection.R')
